-create table of patients who had been diagnosed with diabetes--
CREATE TABLE POP_DB_7_DM AS
(SELECT * FROM POP_DB_7 D
WHERE D.IDENTIFIER IN 
(SELECT P.IDENTIFIER FROM POP_DB_7 P WHERE P.YEAR='2016' AND P.DIABETES_DIAGDATE IS NOT NULL));

--this is to create inidividual tables for each year before adding features for the year
CREATE TABLE POP_DB_7_DM11 AS
(SELECT * FROM POP_DB_7 D
WHERE D.IDENTIFIER IN 
(SELECT P.IDENTIFIER FROM POP_DB_7 P WHERE P.YEAR='2016' AND P.DIABETES_DIAGDATE IS NOT NULL)
and year='2011 and Earlier');

-- this will append additional features from the year specific table --
CREATE TABLE pop_DB_7_DM161 AS
select * from pop_DB_7_DM16 left join "ALVIN.YUEN".mts_MED_2016_2 
on patient_aid = patient_id;

create table POP_DB_7_DM1 AS
SELECT * FROM POP_DB_7_DM121 p order by p.identifier asc, p.year asc;

UPDATE POP_DB_7_DM1 SET GRPA=0 WHERE GRPA IS NULL;
UPDATE POP_DB_7_DM1 SET GRPA10A=0 WHERE GRPA10A IS NULL;
UPDATE POP_DB_7_DM1 SET GRPB=0 WHERE GRPB IS NULL;
UPDATE POP_DB_7_DM1 SET GRPC=0 WHERE GRPC IS NULL;
UPDATE POP_DB_7_DM1 SET GRPD=0 WHERE GRPD IS NULL;
UPDATE POP_DB_7_DM1 SET GRPG=0 WHERE GRPG IS NULL;
UPDATE POP_DB_7_DM1 SET GRPH=0 WHERE GRPH IS NULL;
UPDATE POP_DB_7_DM1 SET GRPJ=0 WHERE GRPJ IS NULL;
UPDATE POP_DB_7_DM1 SET GRPL=0 WHERE GRPL IS NULL;
UPDATE POP_DB_7_DM1 SET GRPM=0 WHERE GRPM IS NULL;
UPDATE POP_DB_7_DM1 SET GRPN=0 WHERE GRPN IS NULL;
UPDATE POP_DB_7_DM1 SET GRPP=0 WHERE GRPP IS NULL;
UPDATE POP_DB_7_DM1 SET GRPR=0 WHERE GRPR IS NULL;
UPDATE POP_DB_7_DM1 SET GRPS=0 WHERE GRPS IS NULL;
UPDATE POP_DB_7_DM1 SET GRPV=0 WHERE GRPV IS NULL;


--TABLE of DM patient's inpatient records
CREATE TABLE POP_DB_HACK_INP 
AS (
SELECT MTS.MTS_EVENT.*
FROM MTS.MTS_EVENT 
WHERE  PATIENT_TYPE_ETS_ID = 'CON-192962'
AND MOV_CAT_ETS_ID IN ('CON-124598', 'CON-124599')
AND MOV_TYPE_ETS_ID IN (SELECT CONCEPT_ID FROM MTS.MTS_CLASSIFICATIONS WHERE CLS_CODE = 'NEHR_EVN_IMP')
AND MOV_TYPE_ETS_ID NOT IN ('CON-191937', 'CON-191938', 'CON-192544', 'CON-284', 'CON-7658753', 'CON-7658754', 'CON-83750', 'CON-83754', 'CON-8534582')
AND CANCELLATION_NOTICE = 'false'
AND MTS.MTS_EVENT.PATIENT_ID_EXTN IN
(SELECT DISTINCT PATIENT_AID FROM POP_DB_HACK1));

UPDATE POP_DB_HACK_INP
SET LOS = (DISCHARGE_DATE - VISIT_ADMIN_DATE);

--TABLE of DM patient's INP visit by year
DROP TABLE POP_DB_HACK_INP_COUNT purge;
CREATE TABLE POP_DB_HACK_INP_COUNT
AS SELECT PATIENT_ID_EXTN, TO_CHAR(EXTRACT(YEAR FROM VISIT_ADMIN_DATE)) as YEAR1 , COUNT(DISTINCT EVN_ID_EXTN)  as INP_NUM, ROUND(SUM(LOS),2) as TOTAL_LOS,
ROUND((SUM(LOS)/COUNT(DISTINCT EVN_ID_EXTN)),2) as MEAN_LOS FROM POP_DB_HACK_INP 
WHERE EXTRACT(YEAR FROM VISIT_ADMIN_DATE) IN ('2012','2013','2014','2015','2016')
GROUP BY PATIENT_ID_EXTN, EXTRACT(YEAR FROM VISIT_ADMIN_DATE) ORDER BY PATIENT_ID_EXTN, EXTRACT(YEAR FROM VISIT_ADMIN_DATE) ;

CREATE TABLE POP_DB_HACK_INP11
AS SELECT PATIENT_ID_EXTN,  COUNT(DISTINCT EVN_ID_EXTN)  as INP_NUM, ROUND(SUM(LOS),2) as TOTAL_LOS,
ROUND((SUM(LOS)/COUNT(DISTINCT EVN_ID_EXTN)),2) as MEAN_LOS FROM POP_DB_HACK_INP 
WHERE EXTRACT(YEAR FROM VISIT_ADMIN_DATE) < '2012'
GROUP BY PATIENT_ID_EXTN
ORDER BY PATIENT_ID_EXTN;

UPDATE POP_DB_HACK_INP11 SET YEAR1= '2011 and Earlier' WHERE YEAR1 = 'POP_DB_HACK_INP11';

INSERT INTO POP_DB_HACK_INP_COUNT (PATIENT_ID_EXTN,YEAR1,INP_NUM,TOTAL_LOS,MEAN_LOS)
SELECT PATIENT_ID_EXTN, YEAR1, INP_NUM, TOTAL_LOS, MEAN_LOS FROM POP_DB_HACK_INP11;

SELECT * FROM POP_DB_HACK_INP_COUNT GROUP BY PATIENT_ID_EXTN;

--TABLE of DM patient's SOC records
CREATE TABLE POP_DB_HACK_SOC
AS (
SELECT MTS.MTS_EVENT.*
FROM MTS.MTS_EVENT 
WHERE  PATIENT_TYPE_ETS_ID = 'CON-192961'
AND MOV_TYPE_ETS_ID IN (SELECT CONCEPT_ID FROM MTS.MTS_CLASSIFICATIONS WHERE CLS_CODE = 'NEHR_EVN_AMB')
AND MOV_TYPE_ETS_ID NOT IN (SELECT CONCEPT_ID FROM MTS.MTS_CLASSIFICATIONS WHERE CLS_CODE = 'NEHR_EVN_ED')
AND FACILITY_EXTN IN ('TTSH', 'NCC', 'SGH', 'NHC', 'CGH', 'KKH', 'AH', 'SNEC', 'KTPH', 'NUH', 'NTFGH')
AND CANCELLATION_NOTICE = 'false'
AND MTS.MTS_EVENT.PATIENT_ID_EXTN IN
(SELECT DISTINCT PATIENT_AID FROM POP_DB_HACK1));

--TABLE of DM patient's SOC visit by year
DROP TABLE POP_DB_HACK_SOC_COUNT purge;
CREATE TABLE POP_DB_HACK_SOC_COUNT
AS SELECT PATIENT_ID_EXTN, TO_CHAR(EXTRACT(YEAR FROM VISIT_ADMIN_DATE)) as YEAR1 , COUNT(DISTINCT EVN_ID_EXTN)  as SOC_NUM FROM POP_DB_HACK_SOC 
WHERE EXTRACT(YEAR FROM VISIT_ADMIN_DATE) IN ('2012','2013','2014','2015','2016')
GROUP BY PATIENT_ID_EXTN, EXTRACT(YEAR FROM VISIT_ADMIN_DATE) ORDER BY PATIENT_ID_EXTN, EXTRACT(YEAR FROM VISIT_ADMIN_DATE) ;

--SOC PRE-2012
CREATE TABLE POP_DB_HACK_SOC11 as;
SELECT PATIENT_ID_EXTN, COUNT(DISTINCT EVN_ID_EXTN) AS SOC_NUM
FROM POP_DB_HACK_SOC
WHERE EXTRACT(YEAR FROM VISIT_ADMIN_DATE) < '2012'
GROUP BY PATIENT_ID_EXTN
ORDER BY PATIENT_ID_EXTN ;

UPDATE POP_DB_HACK_SOC11 SET YEAR1= '2011 and Earlier' WHERE YEAR1 IS NULL;

INSERT INTO POP_DB_HACK_SOC_COUNT (PATIENT_ID_EXTN,YEAR1,SOC_NUM)
SELECT PATIENT_ID_EXTN, YEAR1, SOC_NUM FROM POP_DB_HACK_SOC11;

SELECT * FROM POP_DB_HACK_INP_COUNT GROUP BY PATIENT_ID_EXTN;

--TABLE of DM patient's primary visit records
CREATE TABLE POP_DB_HACK_PRI 
AS (
SELECT MTS.MTS_EVENT.*
FROM MTS.MTS_EVENT 
WHERE PATIENT_TYPE_ETS_ID = 'CON-192961'
AND MTS.MTS_EVENT.PATIENT_ID_EXTN IN (SELECT DISTINCT PATIENT_AID FROM POP_DB_HACK1)
AND CANCELLATION_NOTICE = 'false'
MINUS (
SELECT MTS.MTS_EVENT.*
FROM MTS.MTS_EVENT 
WHERE PATIENT_TYPE_ETS_ID = 'CON-192961'
AND MOV_TYPE_ETS_ID IN (SELECT CONCEPT_ID FROM MTS.MTS_CLASSIFICATIONS WHERE CLS_CODE = 'NEHR_EVN_AMB')
AND MOV_TYPE_ETS_ID NOT IN (SELECT CONCEPT_ID FROM MTS.MTS_CLASSIFICATIONS WHERE CLS_CODE = 'NEHR_EVN_ED')
AND FACILITY_EXTN IN ('TTSH', 'NCC', 'SGH', 'NHC', 'CGH', 'KKH', 'AH', 'SNEC', 'KTPH', 'NUH', 'NTFGH')
AND CANCELLATION_NOTICE = 'false'
UNION
SELECT MTS.MTS_EVENT.*
FROM MTS.MTS_EVENT 
WHERE PATIENT_TYPE_ETS_ID = 'CON-192961'
AND MOV_TYPE_ETS_ID IN (SELECT CONCEPT_ID FROM MTS.MTS_CLASSIFICATIONS WHERE CLS_CODE = 'NEHR_EVN_AMB')
AND MOV_TYPE_ETS_ID IN (SELECT CONCEPT_ID FROM MTS.MTS_CLASSIFICATIONS WHERE CLS_CODE = 'NEHR_EVN_ED')
AND CANCELLATION_NOTICE = 'false'));

--TABLE of DM patient's count of  primary visit records
DROP TABLE POP_DB_HACK_PRI_COUNT purge;
CREATE TABLE POP_DB_HACK_PRI_COUNT
AS SELECT PATIENT_ID_EXTN, TO_CHAR(EXTRACT(YEAR FROM VISIT_ADMIN_DATE)) as YEAR1 , COUNT(DISTINCT EVN_ID_EXTN)  as PRI_NUM FROM POP_DB_HACK_PRI
WHERE EXTRACT(YEAR FROM VISIT_ADMIN_DATE) IN ('2012','2013','2014','2015','2016')
GROUP BY PATIENT_ID_EXTN, EXTRACT(YEAR FROM VISIT_ADMIN_DATE) ORDER BY PATIENT_ID_EXTN, EXTRACT(YEAR FROM VISIT_ADMIN_DATE) ;

--PRI PRE-2012
CREATE TABLE POP_DB_HACK_PRI11 AS
SELECT PATIENT_ID_EXTN, COUNT(DISTINCT EVN_ID_EXTN) AS PRI_NUM
FROM POP_DB_HACK_PRI
WHERE EXTRACT(YEAR FROM VISIT_ADMIN_DATE) < '2012'
GROUP BY PATIENT_ID_EXTN
ORDER BY PATIENT_ID_EXTN ;

UPDATE POP_DB_HACK_PRI11 SET YEAR1= '2011 and Earlier' WHERE YEAR1 IS NULL;

INSERT INTO POP_DB_HACK_PRI_COUNT (PATIENT_ID_EXTN,YEAR1,PRI_NUM)
SELECT PATIENT_ID_EXTN, YEAR1, PRI_NUM FROM POP_DB_HACK_PRI11;

SELECT * FROM POP_DB_HACK_PRI_COUNT ORDER BY PATIENT_ID_EXTN;

--TABLE OF poly records
CREATE TABLE POP_DB_HACK_POLY
AS (
SELECT MTS.MTS_EVENT.*
FROM MTS.MTS_EVENT 
WHERE MTS.MTS_EVENT.PATIENT_ID_EXTN IN
(SELECT DISTINCT PATIENT_AID FROM POP_DB_HACK1)
AND FACILITY_EXTN IN ('AMK', 'HOU','JUR','YIS','PCLTM','PCLBD','CCK','WDL','TP','PCLGL','BBK','CLM','PCLSK',
'PCLBM','NHGP','PCLOU','PCLPR','SHP','PCLQT','PCLMP','HOUP','WDLP','AMKP','JURP','TPYP'));

DROP TABLE POP_DB_HACK_SOC11 purge;
CREATE TABLE POP_DB_HACK_POLY_COUNT
AS SELECT PATIENT_ID_EXTN, TO_CHAR(EXTRACT(YEAR FROM VISIT_ADMIN_DATE)) as YEAR1 , COUNT(DISTINCT EVN_ID_EXTN)  as POLY_NUM FROM POP_DB_HACK_POLY
WHERE EXTRACT(YEAR FROM VISIT_ADMIN_DATE) IN ('2012','2013','2014','2015','2016')
GROUP BY PATIENT_ID_EXTN, EXTRACT(YEAR FROM VISIT_ADMIN_DATE) ORDER BY PATIENT_ID_EXTN, EXTRACT(YEAR FROM VISIT_ADMIN_DATE);

--POLY PRE-2012
CREATE TABLE POP_DB_HACK_POLY11 AS
SELECT PATIENT_ID_EXTN, COUNT(DISTINCT EVN_ID_EXTN) AS POLY_NUM
FROM POP_DB_HACK_POLY
WHERE EXTRACT(YEAR FROM VISIT_ADMIN_DATE) < '2012'
GROUP BY PATIENT_ID_EXTN
ORDER BY PATIENT_ID_EXTN ;

UPDATE POP_DB_HACK_POLY11 SET YEAR1= '2011 and Earlier' WHERE YEAR1 IS NULL;

INSERT INTO POP_DB_HACK_POLY_COUNT (PATIENT_ID_EXTN,YEAR1,POLY_NUM)
SELECT PATIENT_ID_EXTN, YEAR1, POLY_NUM FROM POP_DB_HACK_POLY11;

SELECT * FROM POP_DB_HACK_INP_COUNT ORDER BY PATIENT_ID_EXTN;

--TABLE OF chas records
CREATE TABLE POP_DB_HACK_CHAS
AS (
SELECT MTS.MTS_EVENT.*
FROM MTS.MTS_EVENT 
WHERE MTS.MTS_EVENT.PATIENT_ID_EXTN IN
(SELECT DISTINCT PATIENT_AID FROM POP_DB_HACK1)
AND FACILITY_EXTN IN (select distinct FACILITY_EXTN from DASHBOARD_ALL_CHAS_EVENTS));

DROP TABLE POP_DB_HACK_CHAS_COUNT purge;
CREATE TABLE POP_DB_HACK_CHAS_COUNT
AS SELECT PATIENT_ID_EXTN, TO_CHAR(EXTRACT(YEAR FROM VISIT_ADMIN_DATE)) as YEAR1 , COUNT(DISTINCT EVN_ID_EXTN)  as PRI_NUM FROM POP_DB_HACK_CHAS
WHERE EXTRACT(YEAR FROM VISIT_ADMIN_DATE) IN ('2012','2013','2014','2015','2016')
GROUP BY PATIENT_ID_EXTN, EXTRACT(YEAR FROM VISIT_ADMIN_DATE) ORDER BY PATIENT_ID_EXTN, EXTRACT(YEAR FROM VISIT_ADMIN_DATE);

--join records to main table, create one table at a time to join each of chas,inp, poly, pri and soc count tables
CREATE TABLE POP_DB_HACK41
AS(
Select POP_DB_HACK4.* ,  POP_DB_HACK_SOC_COUNT.SOC_NUM
From POP_DB_HACK4
LEFT JOIN POP_DB_HACK_SOC_COUNT
ON POP_DB_HACK4.PATIENT_AID = POP_DB_HACK_SOC_COUNT.PATIENT_ID_EXTN
AND POP_DB_HACK_SOC_COUNT.YEAR1 = POP_DB_HACK4.YEAR1);

CREATE TABLE POP_DB_HACK42
AS(
Select POP_DB_HACK41.* ,  POP_DB_HACK_PRI_COUNT.PRI_NUM
From POP_DB_HACK41
LEFT JOIN POP_DB_HACK_PRI_COUNT
ON POP_DB_HACK41.PATIENT_AID = POP_DB_HACK_PRI_COUNT.PATIENT_ID_EXTN
AND POP_DB_HACK_PRI_COUNT.YEAR1 = POP_DB_HACK41.YEAR1);

CREATE TABLE POP_DB_HACK43
AS(
Select POP_DB_HACK42.* ,  POP_DB_HACK_POLY_COUNT.POLY_NUM
From POP_DB_HACK42
LEFT JOIN POP_DB_HACK_POLY_COUNT
ON POP_DB_HACK42.PATIENT_AID = POP_DB_HACK_POLY_COUNT.PATIENT_ID_EXTN
AND POP_DB_HACK_POLY_COUNT.YEAR1 = POP_DB_HACK42.YEAR1);

CREATE TABLE POP_DB_HACK44
AS(
Select POP_DB_HACK43.* ,  POP_DB_HACK_INP_COUNT.INP_NUM, POP_DB_HACK_INP_COUNT.TOTAL_LOS, POP_DB_HACK_INP_COUNT.MEAN_LOS
From POP_DB_HACK43
LEFT JOIN POP_DB_HACK_INP_COUNT
ON POP_DB_HACK43.PATIENT_AID = POP_DB_HACK_INP_COUNT.PATIENT_ID_EXTN
AND POP_DB_HACK_INP_COUNT.YEAR1 = POP_DB_HACK43.YEAR1);

CREATE TABLE POP_DB_HACK5
AS Select POP_DB_HACK44.* From POP_DB_HACK44 ORDER BY PATIENT_AID ASC, YEAR1 ASC;

-- from HACK2, delete columns that contain all null records
Alter TABLE POP_DB_HACK3 
DROP (POSTALCODE,DRENTAL, FLAT_TYPE3,DPRIVATE,FLAT_TYPE1,FLAT_TYPE2,D_VALID,
DCD_ASTHMA,DCD_ATRFIB,DCD_COPD,DCD_CHD,DCD_LPD,DCD_GDM,DCD_HEARTFAIL,DCD_HIPFRAC,
DCD_HYP,DCD_OSTEOPOROSIS,DCD_PREDIAB,DCD_PREGHYP,DCD_RENAL,DCD_SPINEFRAC,DCD_STROKE,
DCD_SUSPECTEDSTROKE,DCD_WEIGHT,DBIPOLAR,DDEMENTIA,DGENANXIETYDIS,DMAJDEPRESSION,
DSCHIZOPHRENIA,POLY_VISITS,POLY_COST,CHAS_COST,CHAS_VISITS,SOC_VISITS,INPATIENT_ADM_VISITS,
AVOIDABLE_ADMIT,PRI_CARE_VISITS,LOS,CS_TOT_CHARGE,DRENAL,DDIALYSIS,DCHD,DANGINA,DMI,DCA,DSTROKE,
DRETI,DNPDR,DPDR,DMINOR_LEA,DMAJOR_LEA,DNEURO,DCIRCUL,DHEART_FAIL,MAJOR_LEA_NEWLY_DIAG,DIALYSIS_NEWLY_DIAG,DDM_AA,
MANAGEMENT_CAT_TYPE,BMI_READING,SDP_READING,DDP_READING,FOOT_SCREENING,EYE_SCREENING);

CREATE TABLE POP_DB_HACK5 
AS(
Select P.PATIENT_AID, 
P.IDENTIFIER, 
P.DIABETES_DIAGDATE, 
P.YEAR1, 
P.MALE, 
P.DOB, 
D.AGE, 
P.DATE_OF_DEATH, 
P.DEATH_IND, 
D.AGE_FIRSTDM, 
D.RESIDENT_STATUS, 
P.RACEGROUP, 
P.RHS_BOUNDARY, 
P.NATIONALITY_STATUS, 
P.TYPE_1_DIABETICS, 
D.TOT_DM_DOS, 
D.SCPR_DOS, 
P.LDL_RESULT, 
P.SC_RESULT, 
P.EGFR, 
P.A1C_RESULT, 
P.SUBZONE, 
D.DIALYSIS_NEWLY_DIAG, 
D.PHOTOCOAG_NEWLY_DIAG, 
D.LEA_NEWLY_DIAG, 
D.MINOR_LEA_NEWLY_DIAG, 
D.MAJOR_LEA_NEWLY_DIAG, 
D.DRENAL, 
D.DPHOTOCOAG, 
D.DNEURO, 
D.DCIRCUL, 
D.DMINOR_LEA, 
D.DMAJOR_LEA, 
D.DCHD, 
D.DHEART_FAIL, 
D.DSTROKE, 
D.ADM, 
D.DDM_AA, 
D.DAA_LT, 
D.DAA_ST, 
D.DAA_HYPO, 
D.DAA_HYPER, 
P.GRPA, 
P.GRPA10A, 
P.GRPB, 
P.GRPC, 
P.GRPD, 
P.GRPG, 
P.GRPH, 
P.GRPJ, 
P.GRPL, 
P.GRPM, 
P.GRPN, 
P.GRPP, 
P.GRPR, 
P.GRPS, 
P.GRPV, 
P.CHAS_NUM, 
D.CHAS_ONLY, 
D.CHAS_ONLY_COST, 
P.POLY_NUM, 
D.POLY_ONLY, 
D.POLY_ONLY_COST, 
D.POLY_CHAS, 
D.POLY_CHAS_COST, 
P.SOC_NUM, 
D.SOC_MGT, 
P.PRI_NUM, 
D.PRI_CARE_MGT, 
D.PRI_CARE_MGT_COST, 
P.INP_NUM, 
P.TOTAL_LOS, 
P.MEAN_LOS, 
D.LOS_COMPLIX, 
D.COST_COMPLIX
From POP_DB_HACK4 P
LEFT JOIN DASHBOARD_27042017_2 D
ON P.PATIENT_AID = D.PATIENT_AID
AND P.IDENTIFIER = D.IDENTIFIER
AND P.YEAR1 = D.DIAGYEAR);


--------------- CREATE LAB FEATURES --------------------
create table POP_DB_HACK_LAB AS
WITH TEMP AS
(select PATIENT_ID_EXTN, BATTERY_ACT_ID, ITEM_NAME_ETS_ID, ITEM_NAME_ORI_TXT, ITEM_NUMERIC_VALUE, ITEM_NUMERIC_VALUE_UOM, ITEM_ABNORMAL_FLAG_ETS_ID, ITEM_ABNORMAL_FLAG_ORI_TXT, ITEM_REFERENCE_RANGE 
from mts.mts_laboratory_item 
where (ITEM_NAME_ORI_TXT IN ('Glycated HB', 'Glycated Hb', 'Glycated HB, POCT', 'HbA1c, POCT', 'HbA1c (%)', 'HbA1c (%) (POCT)', 'HbA1c (IFCC)', 'HbA1c (IFCC.)', 'HbA1c (mmol/mol)', 'HbA1c (mmol/mol) (POCT)', 'HbA1c (NGSP)', 'HbA1c (NGSP.)', 'HBA1C Comment 1', 'POCT HbA1c', 'Glycated Hb, R', 'Glycated Hb, POCT', 'Glycated Haemoglobin', 'HBA1c, blood', 'HbA1c', 'HbA1c, rapid', 'HbA1c, Rapid', 'Glycosylated Haemoglobin Alc',
'Albumin, serum', 'Albumin', 'Albumin, NUH', 'Albumin (Electrophoresis), serum', 'Albumin, Tot Protein', 'Albumin (Piccolo)', 'Albumin, Serum', 
'Creatinine, serum', 'Creatinine, Serum', 'Creatinine', 'Creatinine.', 'Creatinine (Piccolo)', 'Creatinine (ISTAT)', 'Creatinine Enzymatic', 'Creatinine POCT', 'Creatinine, POCT',  'Creatinine, blood (i-STAT)', 
'Glucose, Fasting Venous', 'Glucose, POCT', 'Glucose, Fasting Venous.', 'Blood Glucose Level', 'Glucose (Fasting)', 'Glucose, Fasting, POCT', 'Glucose, Plasma', 'Glucose, plasma', 'Glucose, Serum, Fasting', 'Glucose', 'Glucose (Piccolo)', 'Glucose, fasting', 'Glucose, Fasting', 'Glucose, fasting, pl', '....UE/Cre/Glu, serum*', 'Glucose (Fasting), plasma', 'Glucsoe (Fasting), Serum', 'Glucose, Plasma, Fasting', 'Glucose, serum', 
'Albumin, Urine, Random', 'Albumin, Urine', 'Albumin, U', 'Albumin, 24H Urine, Calculated', 'Albumin, urine, NEGATIVE', 'Albumin, urine, NEG', 'Albumin, urine', 'Albumin, urine, 24Hr', 'Albumin, U 24h', 'Microalbumin, Urine, Random', 'Microalbumin (24-hour), urine', 'Microalbumin, urine', 'Microalbumin, U', 'Urine Microalbumin', 
'Total Protein, 24H Urine', 'Protein, Total U 24h', 'Protein (Random), urine', 'Total Protein, urine', 'Protein E''phoresis,U', 'Protein Electrophoresis, urine', 'Protein (24-hour), urine', 'Protein (Dipstix), urine', 'Protein, Tot U Exc', 'Protein, Total U', 'Protein, Tot U 24h', 'Protein, Urine', 'Total Protein, Urine, NUH', 'Protein, Total Urine', 'Protein, Total urine', 'Total Protein, Urine, 24Hr', 'Protein, 24-hour urine', 'Protein (Urine FEME)', 'Total Protein, Urine, Random', 'Urine Total Protein 24Hr', 'Protein Total, urine', '24Hr Total Protein Excretion', '24Hr Urine Protein Electrophoresis', 'Protein, U', 'Protein, Total U Exc', 'Protein, Urine (POCT)', 'Protein Electrophoresis, Urine', 'Protein Electrophoresis, Urine Test Result', 'Total Protein, 24H Urine, Calculated', 'Urine Total Protein', 
'Total Cholesterol', 'Cholesterol Total, serum', 'Cholesterol-Total', 'Cholesterol', 'Cholesterol HDL, serum', 'Cholesterol-HDL', 'HDL-Cholesterol', 'HDL', 'HDL-C', 
'Triglycerides, serum', 'Triglycerides.', 'Triglycerides', 
'C-Reactive Protein, serum', 'C-Reactive Protein', 'High Sensitive C-Reactive Protein', 'CRP,high sensitive', 'High sensitive CRP', 'CRP', 'CRP Comment', 'HCRP Comments',
'Aldosterone, 24H Urine, Calculated', 'Aldosterone, 24-hour urine', 'Aldosterone, Urine', 'Aldosterone, U', 'Aldosterone, U 24h', 'Aldosterone, Urine, 24Hr',
'Uric Acid, Serum', 'Uric Acid', 'Uric Acid, serum', 'Uric Acid Serum',
'Phosphate', 'Phosphate, Serum', 'Phosphate Inorganic, serum', 'PhosphatePiccolo',
'Actual Bicarbonate, ABG (POCT)', 'Actual Bicarbonate, blood', 'Actual bicarbonate, Venous', 'Bicarbonate, serum', 'Bicarbonate, Serum', 'Bicarbonate, POCT', 'Bicarbonate', 'Bicarbonate (arterial bicarbonate)', 'Bicarbonate (calculated)', 'STD Bicarbonate, POCT', 'Standard Bicarb, POCT', 'Standard Bicarb', 'Standard Bicarbonate', 'Standard Bicarbonate, blood', 'Standard Bicarbonate, Venous', 'Standard Bicarbonate, ABG (POCT)', 'TCO2, POCT', 'Total CO2 (Piccolo)', 'Total CO2 (i-STAT)', 'Carbon Dioxide', 'Total carbon dioxide (calculated)',
'Calcium', 'Calcium, Serum', 'Calcium, Adjusted', 'Calcium, Corrected', 'Calcium, Tot and Adj', 'Calcium (Piccolo)', 'Calcium (Serum)', 'Calcium Panel', 'Calcium Tot/Calc', 'Calcium Total, serum', 'Calcium Total (Corrected)', 'Calcium.',
'pH Arterial', 'pH, Arterial, POCT', 'pH, blood', 'pH, Blood POCT', 'pH, POCT', 'pH, ABG (POCT)', 'pH', 'pH, blood (i-STAT)', 'pH Blood, POCT', 'pH Arterial, POCT', 
'pCO2, blood (i-STAT)', 'pCO2, ABG (POCT)', 'pCO2, POCT', 'pCO2, Venous', 'pCO2, blood', 'pCO2', 'pCO2, Arterial', 
'Urine Ketones', 'Urine Ketones (OGTT)', 'Ketone, U', 'Ketone, Urine', 'Ketone, Urine (POCT)', 'Ketones, urine', 'Ketones (Dipstix), urine',
'Magnesium', 'Magnesium, Serum', 'Magnesium, serum', 'Magnesium, Dialysate', 'Magnesium Serum', 'Magnesium Piccolo', 
'Sodium', 'Sodium, POCT', 'Sodium, Na+, ABG (POCT)', 'Sodium, blood (i-STAT)', 'Sodium, serum', 'Sodium, Dialysate', 'Sodium, Adjusted', 'Sodium, (ISTAT)', 'Sodium, WB', 'Sodium, Serum', 'Sodium (POCT)', 'Sodium (Piccolo)', 'Sodium.',
'Plasma Haemoglobin', 'Haemoglobin', 'Haemoglobin.', 'Haemoglobin, POCT', 'Haemoglobin .', 'Haemoglobin (calculated)', 'Haemoglobin (ISTAT)',
'Glucose, GTT - 2 Hour', 'Glucose 120 min', 'Glucose (120 min), plasma', 'Glucose (120 min), serum', 'Glucose (120 min)', 'Glucose (120 min)', 'OGTT 2Hr Glucose',
'ALT', 'ALT (Piccolo)', 'Alanine Aminotransferase', 'Alanine Transaminase, serum', 'Alanine Transaminase', 'Alanine Transaminase (ALT)',
'Albumin:Creat Ratio','Albumin:Creatinine Ratio, Urine Result, mg/mmol','Microalbumin/Creatinine Ratio, urine','Alb:Crea Ratio, U','Microalbumin/Creatinine Ratio (Random)','Alb:Crea Ratio','Albumin:Creatinine Ratio, Urine Result, ug/mg')
or UPPER(ITEM_NAME_ORI_TXT) LIKE '%TROPONIN%'))

select distinct t.*, l.EVENT_EXT, l.EXAMINATION_DATE, l.ORDER_FAC_EXTN, l.FACILITY_EXTN, l.INVESTIGATION_NAME_ORI_TXT 
from mts.mts_laboratory l, TEMP t
where l.BATTERY_ACT_ID = t.battery_act_id
and PATIENT_ID_EXTN IN (SELECT DISTINCT PATIENT_AID FROM POP_DB_HACK5);


